name: Build Solar2D Windows

on:
  push:
    branches: [ main, master ]
  workflow_dispatch:
    inputs:
      buildNumber:
        description: "Build Number"
        required: true
        default: "9999"
      buildYear:
        description: "Build Year"
        required: true
        default: "2025"

env:
  SOLAR2D_REPO: "https://github.com/coronalabs/corona.git"
  BUILD_NUMBER: ${{ github.event.inputs.buildNumber || github.run_number }}
  YEAR: ${{ github.event.inputs.buildYear || '2025' }}

permissions:
  contents: write
  packages: write

jobs:
  build-windows:
    runs-on: windows-2022
    
    steps:
      - name: Checkout current repository
        uses: actions/checkout@v4

      - name: Clone Solar2D repository with submodules
        shell: bash
        run: |
          git clone --recursive ${{ env.SOLAR2D_REPO }} solar2d-source
          cd solar2d-source
          echo "Solar2D cloned successfully"
          
      - name: Initialize build environment
        shell: bash
        run: |
          cd solar2d-source
          # Run the setup script that Solar2D uses
          ./tools/GHAction/daily_env.sh

      - name: Create docs directory and get sample code
        shell: bash
        run: |
          mkdir -p solar2d-source/docs
          # Get Sample Code directly into solar2d-source/docs
          git clone --depth 1 https://github.com/coronalabs/samples-coronasdk.git solar2d-source/docs/SampleCode
          # Clean up git files
          rm -rf solar2d-source/docs/SampleCode/.git solar2d-source/docs/SampleCode/.gitignore

      - name: Get required dependencies
        shell: bash
        run: |
          cd solar2d-source
          
          # Get JRE
          curl -sL https://github.com/coronalabs/binary-data/releases/download/1.0/jre.win32.7z -o jre.win32.7z
          7z x jre.win32.7z -o"platform/windows/Bin" -y
          
          # Get redistributables
          curl -sL https://github.com/coronalabs/binary-data/releases/download/1.0/redist.win32.7z -o redist.win32.7z
          7z x redist.win32.7z -o"platform/windows/Bin/redist" -y
          
          # Get NX Template
          curl -sL https://github.com/coronalabs/binary-data/releases/download/1.0/nxtemplate -o platform/resources/nxtemplate

      - name: Install build tools
        shell: cmd
        run: |
          choco install dotnet-8.0-runtime --no-progress

      - name: Install Visual Studio components
        shell: powershell
        run: |
          Set-Location "C:\Program Files (x86)\Microsoft Visual Studio\Installer\"
          $InstallPath = "C:\Program Files\Microsoft Visual Studio\2022\Enterprise"
          $componentsToAdd = @(
            "Microsoft.VisualStudio.Component.VC.14.29.16.11.MFC"
          )
          [string]$workloadArgs = $componentsToAdd | ForEach-Object {" --add " +  $_}
          $Arguments = ('/c', "vs_installer.exe", 'modify', '--installPath', "`"$InstallPath`"",$workloadArgs, '--quiet', '--norestart')
          $process = Start-Process -FilePath cmd.exe -ArgumentList $Arguments -Wait -PassThru -WindowStyle Hidden
          if ($process.ExitCode -eq 0) {
              Write-Host "Components have been successfully added"
          } else {
              Write-Host "Components were not installed"
              exit 1
          }

      - name: Set padded build number
        shell: bash
        run: |
          echo "PADDED_BUILD=$(printf '%04d' ${{ env.BUILD_NUMBER }})" >> $GITHUB_ENV

      - name: Update version files
        shell: cmd
        run: |
          cd solar2d-source\platform\windows
          call UpdateFileVersions.bat %BUILD_NUMBER%

      - name: Build Solar2D
        shell: cmd
        run: |
          cd solar2d-source\platform\windows
          call Build.Tools\VSVars.bat
          devenv "Corona.Shell.sln" /rebuild "Release|Win32"
          devenv "Corona.Simulator.sln" /build "Release|Win32"
          devenv "CoronaBuilder.sln" /build "Release|Win32"

      - name: Package Solar2D for ZIP distribution
        shell: bash
        run: |
          cd solar2d-source
          mkdir -p output
          
          # Package Solar2D
          mkdir -p staging/Solar2D
          if [ -d "platform/windows/Bin" ]; then
            cp -r platform/windows/Bin/* staging/Solar2D/
            rm -f staging/Solar2D/*.msi
            if [ -d "docs" ]; then
              cp -r docs staging/Solar2D/
            fi
            cd staging
            7z a -tzip "../output/Solar2D-Windows-${{ env.YEAR }}.${{ env.PADDED_BUILD }}.zip" Solar2D/*
            cd ..
          fi

      - name: Upload Solar2D Windows artifacts
        uses: actions/upload-artifact@v4
        with:
          name: Solar2D-Windows-${{ env.YEAR }}.${{ env.PADDED_BUILD }}
          path: solar2d-source/output/*.zip

      - name: Create Release
        if: github.event_name == 'push' || github.event_name == 'workflow_dispatch'
        uses: softprops/action-gh-release@v2.1.0
        with:
          files: solar2d-source/output/*.zip
          tag_name: v${{ env.YEAR }}.${{ env.PADDED_BUILD }}
          name: Solar2D Windows Build ${{ env.YEAR }}.${{ env.PADDED_BUILD }}
          body: |
            Automated build of Solar2D ${{ env.YEAR }}.${{ env.PADDED_BUILD }} for Windows
            
            Built from upstream Solar2D repository
            Build number: ${{ env.PADDED_BUILD }}
            Commit: ${{ github.sha }}
            
            **Download:**
            - Windows x86 (32-bit): `Solar2D-Windows-${{ env.YEAR }}.${{ env.PADDED_BUILD }}.zip`
            
            This build includes:
            - Solar2D SDK and tools
            - JRE runtime
            - Sample code and documentation
            - Required redistributables
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
